{"version":3,"sources":["../../../src/js/plugins/ColorPlugin.js"],"names":["this","createjs","ColorPlugin","getColorObj","value","mode","parseHex","parseRgbOrHsl","o","result","s","RGB_HSL_RE","exec","rgb","m","lastIndexOf","parseInt","undefined","parseFloat","rgbToHsl","hslToRgb","HEX_RE","hex","length","num","r","g","b","max","Math","min","h","l","d","q","p","hue2rgb","t","COLOR_RE","_mode","ID","install","Tween","_installPlugin","init","tween","prop","data","pluginData","colorData","target","Color_disabled","_addPlugin","Color","step","props","n","change","ratio","end","o0","prev","o1","d0","v1","v2","a","toFixed"],"mappings":"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","sourcesContent":["/*\n* ColorPlugin\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module TweenJS\n */\n \nthis.createjs = this.createjs||{};\n\n(function() {\n\t\"use strict\";\n\t\n\t/**\n\t * The ColorPlugin enables tweening of almost any CSS color values. This includes 3 or 6 digit hex colors (`#00FF00`),\n\t * rgb, rgba, hsl, and hsla colors (but not named colors, such as `red`).\n\t * \n\t * It can operate in either `rgb` or `hsl` mode. It will convert all colors into that mode, and output them accordingly.\n\t * @class ColorPlugin\n\t * @constructor\n\t */\n\tfunction ColorPlugin() {\n\t\tthrow(\"ColorPlugin cannot be instantiated.\");\n\t}\n\tvar s = ColorPlugin;\n\t\n\t\n\t/**\n\t * READ-ONLY. RegExp pattern that detects CSS color values.\n\t * @property COLOR_RE\n\t * @type {RegExp}\n\t * @static\n\t * @readonly\n\t */\n\ts.COLOR_RE = /^#[0-9a-fA-F]{3}|^hsla?\\(|^rgba?\\(/\n\t\n\t/**\n\t * READ-ONLY. RegExp pattern that matches rgb or hsl color strings, with groups for each value.\n\t * @property RGB_HSL_RE\n\t * @type {RegExp}\n\t * @static\n\t * @readonly\n\t */\n\ts.RGB_HSL_RE = /^(?:rgb|hsl)a?\\((\\d{1,3})%?, ?(\\d{1,3})%?, ?(\\d{1,3})%?(?:, ?([0-9.]+))?\\)$/;\n\t\n\t/**\n\t * READ-ONLY. RegExp pattern that matches a 3 or 6 digit RGB string with a preceding #.\n\t * @property HEX_RE\n\t * @type {RegExp}\n\t * @static\n\t * @readonly\n\t */\n\ts.HEX_RE = /^#((?:[a-f0-9]{3}){1,2})$/i;\n\n\t/**\n\t * @property _mode\n\t * @type {string}\n\t * @static\n\t * @default rgb\n\t * @protected\n\t */\n\ts._mode = \"rgb\";\n\t\n\t/**\n\t * READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.\n\t * @property ID\n\t * @type {String}\n\t * @static\n\t * @readonly\n\t **/\n\ts.ID = \"Color\";\n\n\t/**\n\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t * @method install\n\t * @param {String} mode A string equalling either \"rgb\" or \"hsl\" indicating what color mode should be used for calculations\n\t * and output. You can input any color type regardless of the mode setting.\n\t * @static\n\t **/\n\ts.install = function(mode) {\n\t\ts._mode = mode || s._mode;\n\t\tcreatejs.Tween._installPlugin(s);\n\t};\n\t\n\t/**\n\t * Called by TweenJS when a new property initializes on a tween.\n\t * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {any} value\n\t * @return {any}\n\t * @static\n\t **/\n\ts.init = function(tween, prop, value) {\n\t\tvar data = tween.pluginData;\n\t\tvalue = value === undefined ? tween.target[prop] : value;\n\t\tif (!data.Color_disabled && typeof value === \"string\" && s.COLOR_RE.exec(value)) {\n\t\t\ttween._addPlugin(s);\n\t\t\tvar colorData = data.Color || (data.Color = {});\n\t\t\tcolorData[prop] = true;\n\t\t\treturn getColorObj(value, s._mode);\n\t\t}\n\t};\n\t\n\t/**\n\t * Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\n\t * See {{#crossLink \"SamplePlugin/step\"}}{{/crossLink}} for more info.\n\t * @method step\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {Object} props\n\t * @static\n\t **/\n\ts.step = function(tween, step, props) {\n\t\tvar n, colorData = tween.pluginData.Color;\n\t\tfor (n in props) {\n\t\t\tif (!colorData[n]) { continue; }\n\t\t\tstep.props[n] = getColorObj(step.props[n], s._mode);\n\t\t}\n\t};\n\n\t/**\n\t * Called before a property is updated by the tween.\n\t * See {{#crossLink \"SamplePlugin/change\"}}{{/crossLink}} for more info.\n\t * @method change\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {String} prop\n\t * @param {any} value\n\t * @param {Number} ratio\n\t * @param {Boolean} end\n\t * @return {any}\n\t * @static\n\t **/\n\ts.change = function(tween, step, prop, value, ratio, end) {\n\t\tif (!tween.pluginData.Color[prop]) { return; }\n\t\tvar o0=step.prev.props[prop], o1 = step.props[prop];\n\t\t\n\t\tvar d0 = o1[0]-o0[0], v1=o0[1]+(o1[1]-o0[1])*ratio+0.5|0, v2=o0[2]+(o1[2]-o0[2])*ratio+0.5|0, a=(o0[3]+(o1[3]-o0[3])*ratio).toFixed(3);\n\t\tif (s._mode === \"rgb\") {\n\t\t\treturn \"rgba(\"+(o0[0]+d0*ratio+0.5|0)+\", \"+v1+\", \"+v2+\", \"+a+\")\";\n\t\t} else {\n\t\t\tif (d0 > 180) { d0 -= 360; }\n\t\t\telse if (d0 < -180) { d0 += 360; }\n\t\t\treturn \"hsla(\"+((o0[0]+d0*ratio+360)%360+0.5|0)+\", \"+v1+\"%, \"+v2+\"%, \"+a+\")\";\n\t\t}\n\t};\n\t\n\t\n// private helper methods:\n\tfunction getColorObj(value, mode) {\n\t\tif (value[0] === \"#\") { return parseHex(value, mode); }\n\t\telse { return parseRgbOrHsl(value, mode); }\n\t}\n\t\n\tfunction parseRgbOrHsl(value, mode) {\n\t\tvar o=[0,0,0,1], result = s.RGB_HSL_RE.exec(value);\n\t\tif (!result) { return o;}\n\t\t\n\t\tvar rgb = value[0] === \"r\", m = (rgb && value.lastIndexOf(\"%\") !== -1) ? 255/100 : 1;\n\t\to[0] = parseInt(result[1]) * m;\n\t\to[1] = parseInt(result[2]) * m;\n\t\to[2] = parseInt(result[3]) * m;\n\t\to[3] = result[4] === undefined ? 1 : parseFloat(result[4]);\n\t\t\n\t\tif (!rgb && mode === \"rgb\") { hslToRgb(o); }\n\t\telse if (rgb && mode !== \"rgb\") { rgbToHsl(o); }\n\t\treturn o;\n\t};\n\t\n\tfunction parseHex(value, mode) {\n\t\tvar o=[0,0,0,1], result = s.HEX_RE.exec(value);\n\t\tif (!result) { return o;}\n\t\tvar hex = result[1];\n\t\tif (hex.length === 3) { hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]; }\n\t\t\n\t\tvar num = parseInt(hex, 16);\n\t\to[0] = num>>16;\n\t\to[1] = num>>8&0xFF;\n\t\to[2] = num&0xFF;\n\t\t\n\t\tif (mode !== \"rgb\") { rgbToHsl(o); }\n\t\t\n\t\treturn o;\n\t};\n\t\n\tfunction rgbToHsl(o) {\n\t\tvar r=o[0], g=o[1], b=o[2], m = 1/255;\n\t\tr *= m, g *= m, b *= m;\n\t\t// TODO: Math.max/min are pretty slow vs conditional assignment\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) * 0.5;\n\n\t\tif (max === min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\t\tif (max === r) { h = (g - b) / d + (g < b ? 6 : 0); }\n\t\t\telse if (max === g) { h = (b - r) / d + 2; }\n\t\t\telse { h = (r - g) / d + 4; }\n\t\t\th /= 6;\n\t\t}\n\t\to[0] = h*360;\n\t\to[1] = s*100;\n\t\to[2] = l*100;\n\t}\n\n\tfunction hslToRgb(o) {\n\t\tvar h=(o[0]%360)/360, s=o[1]/100, l=o[2]/100;\n\t\tvar r, g, b;\n\t\tif (s == 0) {\n\t\t\tr = g = b = l; // achromatic\n\t\t} else {\n\t\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tvar p = 2 * l - q;\n\t\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\t\tg = hue2rgb(p, q, h);\n\t\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t\t}\n\t\to[0] = r*255;\n\t\to[1] = g*255;\n\t\to[2] = b*255;\n\t}\n\t\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) { t += 1; }\n\t\telse if (t > 1) { t -= 1; }\n\t\t\n\t\tif (t < 1 / 6) { return p + (q - p) * 6 * t; }\n\t\tif (t < 0.5) { return q; }\n\t\tif (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n\t\treturn p;\n\t}\n\n\tcreatejs.ColorPlugin = s;\n}());"]}